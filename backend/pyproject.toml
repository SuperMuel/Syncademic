[project]
name = "backend"
version = "0.1.0"
description = "Syncademic Backend"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "arrow>=1.3.0",
    "firebase-functions>=0.2.0",
    "google-api-python-client>=2.120.0",
    "google-auth-httplib2>=0.2.0",
    "google-auth-oauthlib>=1.2.1",
    "langchain-anthropic>=0.2.3",
    "langchain-openai>=0.2.2, <0.3.0",
    "pydantic-settings>=2.5.2",
    "pydantic>=2.9.2",
    "pytz>=2024.2",
    "requests>=2.32.3",
    "validators>=0.34.0",
    "scikit-learn>=1.5.2",
    "ics>=0.7.2",
    "functions-framework>=3.8.1",
    "hdbscan>=0.8.39",
    "langchain>=0.3.3",
    "email-validator>=2.2.0",
    "fastapi[standard]>=0.115.12",
]

[dependency-groups]
dev = [
    "freezegun>=1.5.1",

    # Important note regarding mock-firestore:
    # We're using the official mock-firestore package (0.11.0) which doesn't support collection group queries.
    # The fork at https://github.com/ainbr/python-mock-firestore does support collection group queries,
    # but has issues with nested field operations in `set()` methods.
    # Tests requiring collection group queries are currently skipped.
    "mock-firestore>=0.11.0",

    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "responses>=0.25.3",
    "ruff>=0.6.9",
]

[tool.ruff]

[tool.ruff.lint]
select = [
    "N",  # Enable all pep8-naming rules
    "E7", # Statements lints

    "UP006", # foo: list[int] = [1, 2, 3] instead of foo: List[int] = [1, 2, 3]
    "UP007", # Use X | Y for type annotations

    "UP038", # Use isinstance(x, int | float) instead of isinstance(x, (int, float))

    "ANN001", # Checks that function arguments have type annotations.
    "ANN201", # Missing return type annotation for public function {name}

    "SIM2", # Simplify boolean expressions

    "T20", # Find uses of 'print' or 'pprint'
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*" = ["S101", "D", "D101", "ANN001", "ANN201"]


[tool.pyright]
reportMatchNotExhaustive = true
typeCheckingMode = "basic"
reportUnknownParameterType = true
reportUntypedFunctionDecorator = true
reportMissingTypeStubs = true
reportUnusedImport = true
reportUnusedVariable = true
useLibraryCodeForTypes = true

# [tool.uv.sources]
# mock-firestore = { git = "https://github.com/ainbr/python-mock-firestore" }
